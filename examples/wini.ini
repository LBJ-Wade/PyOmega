; PyOmega INI file

[channels]
channelName = L1:GDS-CALIB_STRAIN,L1:CAL-DELTAL_EXTERNAL_DQ,L1:CAL-PCALX_RX_PD_OUT_DQ,L1:CAL-PCALX_TX_PD_OUT_DQ,L1:CAL-PCALY_RX_PD_OUT_DQ,L1:CAL-PCALY_TX_PD_OUT_DQ,L1:LSC-MCL_OUT_DQ,L1:LSC-MICH_OUT_DQ,L1:LSC-POPAIR_B_RF18_I_ERR_DQ,L1:LSC-POPAIR_B_RF90_I_ERR_DQ,L1:LSC-POP_A_LF_OUT_DQ,L1:LSC-POP_A_RF45_I_ERR_DQ,L1:LSC-POP_A_RF45_Q_ERR_DQ,L1:LSC-POP_A_RF9_I_ERR_DQ,L1:LSC-POP_A_RF9_Q_ERR_DQ,L1:LSC-PRCL_OUT_DQ,L1:LSC-REFL_A_LF_OUT_DQ,L1:LSC-REFL_A_RF45_I_ERR_DQ,L1:LSC-REFL_A_RF45_Q_ERR_DQ,L1:LSC-REFL_A_RF9_I_ERR_DQ,L1:LSC-REFL_A_RF9_Q_ERR_DQ,L1:LSC-REFL_SERVO_CTRL_OUT_DQ,L1:LSC-REFL_SERVO_ERR_OUT_DQ,L1:LSC-SRCL_OUT_DQ,L1:ALS-C_TRX_A_LF_OUT_DQ,L1:ALS-C_TRY_A_LF_OUT_DQ,L1:ASC-AS_A_DC_PIT_OUT_DQ,L1:ASC-AS_A_DC_SUM_OUT_DQ,L1:ASC-AS_A_DC_YAW_OUT_DQ,L1:ASC-AS_A_RF36_I_PIT_OUT_DQ,L1:ASC-AS_A_RF36_I_YAW_OUT_DQ,L1:ASC-AS_A_RF36_Q_PIT_OUT_DQ,L1:ASC-AS_A_RF36_Q_YAW_OUT_DQ,L1:ASC-AS_A_RF45_I_PIT_OUT_DQ,L1:ASC-AS_A_RF45_I_YAW_OUT_DQ 
;channelName = L1:GDS-CALIB_STRAIN
frameType = L1_HOFT_C00,L1_R
;frameType = L1_HOFT_C00
frameCacheFile = framecache.cache

[parameters]
; ---- wscan parameters.
; sampleFrequency: rate at which we resample the frame data. Keep in mind for an omega scan this effects the maximum frequency for which one can make their omega scan reach.
sampleFrequency = 16384
;sampleFrequency = 4096
; blockTime: Before rescaling the omega scan to a given time duration this parameter effeect the duration of the TF map that omega original performs its tiling analysis on
blockTime = 64
; searchFrequencyRange: Range you would like omega to tile over. The relationship between the maximum allowable searchFrequencyRange and the sampling rate is as follows nyquistFrequency / (1 + qPrimeToQ / min(qs)) where nyquistFrequency = sampleFrequency/2
;searchFrequencyRange = [10,1024]
searchFrequencyRange = [10,2048]
; The set of Q planes to search over.
searchQRange = [4,64]
; Do not know what this is
searchMaximumEnergyLoss = 0.2
; A FAR so to speak to determine whether the glitch is significant in terms of above the whitened noise for a given channel.
whiteNoiseFalseRate = 1
; Not sure
alwaysPlotFlag = 1
; searchWindowDuration: Windowing done for TF map/conditioning?
searchWindowDuration = 0.5
; plotTimeRanges: The different duration of Omega scans one wants to plot
plotTimeRanges = [0.5,1,2,4]
; plotFrequencyRange: Could be different than search but defaults to same
plotFrequencyRange = [10,2048]
plotNormalizedERange = [0,25.5]
